{
  "Job":{
    "Region":"us-west-2",
    "ID":"{{ environment }}-{{ product }}",
    "Name":"{{ environment }}-{{ product }}",
    "Type":"service",
    "Priority":50,
    "AllAtOnce":false,
    "Datacenters":[
      "us-west-2a"
    ],
    "TaskGroups":[
      {
        "Name":"{{ environment }}-{{ product }}",
        "Count":1,
        "Constraints": [{
            "LTarget": "${node.class}",
            "RTarget": "{{ environment }}_app",
            "Operand": "="
        }],
        "Tasks":[
          {
            "Name":"{{ environment }}-{{ product }}",
            "Driver":"docker",
            "Config":{
              "image":"{{ image }}",
              "port_map":[
                {
                  "web":4000
                }
              ],
              "logging": [
                {
                  "config": [
                    {
                      "syslog-address": "tcp://syslog.service.consul:514",
                      "tag": "${NOMAD_ALLOC_NAME}/{{ environment }}/{{ product }}/{{ '{{' }} .ImageName {{ '}}' }}/{{ '{{' }} .Name {{ '}}' }}/{{ '{{' }} .ID {{ '}}' }}",
                      "syslog-facility": "daemon",
                      "syslog-format": "rfc3164"
                    }
                  ],
                  "type": "syslog"
                }
              ],
              "auth":[{
                  "username":"{{ credentials.username }}",
                  "password":"{{ credentials.password }}",
                  "email":"{{ credentials.email }}"
                }]
            },
            "Constraints":null,
            "Templates": [
              {
                "SourcePath": "",
                "DestPath": "secrets/vars.env",
                "EmbeddedTmpl": "((range ls \"{{environment}}/env/{{product}}\"))((.Key))=((.Value | toJSON ))\n((end))",
                "ChangeMode": "noop",
                "ChangeSignal": "",
                "Perms": "0644",
                "LeftDelim": "((",
                "RightDelim": "))",
                "Envvars": true
              }
            ],
            "Services":[
              {
                "Name":"{{ product }}",
                "Tags":[
                  "{{ product }}",
                  "{{ environment }}",
                  "web",
                  "internal"
                ],
                "PortLabel":"web",
                "Checks":[
                  {
                    "Id":"",
                    "Name":"{{ product }}-status",
                    "Type":"http",
                    "Command":"",
                    "Args":null,
                    "Path":"/",
                    "Protocol":"",
                    "Interval":10000000000,
                    "Timeout":4000000000
                  }
                ]
              }
            ],
            "Resources":{
              "CPU":500,
              "MemoryMB":512,
              "IOPS":0,
              "Networks":[
                {
                  "DynamicPorts":[
                    {
                      "Label":"web"
                    }
                  ],
                  "MBits":40
                }
              ]
            },
            "Meta":{},
            "KillTimeout":5000000000,
            "LogConfig":{
                "MaxFiles":10,
                "MaxFileSizeMB":10
            }
          },
          {
            "Name":"{{ environment }}-{{ product }}-rsyslog",
            "Driver":"docker",
            "Config":{
              "image":"blinker/rsyslog:latest",
              "hostname": "${attr.unique.hostname}"
            },
            "Constraints":null,
            "Services":[
              {
                "Name":"rsyslog",
                "Tags":[
                  "{{ product }}",
                  "{{ environment }}"
                ]
              }
            ],
            "Resources":{
              "CPU":100,
              "MemoryMB":16,
              "IOPS":0
            },
            "KillTimeout":5000000000,
            "LogConfig":{
              "MaxFiles":10,
              "MaxFileSizeMB":10
            }
          }
        ],
        "RestartPolicy":{
          "Interval":90000000000,
          "Attempts":5,
          "Delay":5000000000,
          "Mode":"delay"
        }
      }
    ],
    "Update":{
      "Stagger":{{ stagger }},
      "MaxParallel":{{ max_parallel }}
    }
  }
}
